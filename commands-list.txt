√/Users/vishangsoni/Downloads/Torrent/Tomorrowland\ 2014 √Commands List
=============

Unix Commands Structure.
Command option argument

==============
BASIC COMMANDS
===============

echo "Message" : To print something on your screen.
banner -w20 "Message" : to print banner on your screen with width of 20.

man <Command> : To see command manual. Command HELP
ls : list directory.
ls -a : list all directory and files with hidden files
ls -lah : Full details for files and direcotry. OR 
ls -l -a -h : -l for long list, -a all files, -h for size of the files in proper format.
cd DIRECTORY_NAME : Change directory name.
cd .. : go one directory.
cd DIR!/DIR2 : to change the multiple directories at once.
cd ../.. : to jump multiple folders at once.
cd TAB_KEY : To Auto Complete directory.
cd / : to go to the root of our HDD
cd ~ : to go to your user directory.
cd - : toggle between current direcotry and recent directory.

pwd : present working directory.

=======================
CREATING FILE COMMANDS
=======================
touch FILE_NAME : will create a file for you. it also updates the last modified time of the file. 

vim FILE_NAME : to edit the file in text editor. old editor
 
nano FILE_NAME : to edit files. NEW IMPROVED EDITOR

=====================
READING FILE COMMANDS
=====================

cat FILE_NAME : the file will display to read.

cat FILE_NAME newFILE_NAME : to concatenate two files.

more FILE_NAME : to read file with pagination. The only issue is you can not go back to your previous page. To improve that unix introduce with new command called less

less FILE_NAME : you will get full control over you reading a file from your unix system. 
Few commands attach with you less
f(forward) and b(backward) to paginate through your big text files.
G: go to end of your file
g: go to begining of your file.
q: quit go to command prompt.

less -M FILE_NAME : To show lines and while you're reading a file.

less -N FILE_NAME : To show line numbers while you're reading.

** Reading portion of the file **

head FILE_NAME : to display first few portion of the file.

tail FILE_NAME : to display last few portion of the file.

**tail -f FILE_NAME : to follow the file if any changes has been made.

====
NOTE : This follow command is very useful to check log files in your system. For example: if you have file server running on your system. you can follow the log file of your system and see what requests are comming to the server.
====


====================
CREATING DIRECTORIES
====================

mkdir DIR_NAME : to create a directory.

mkdir -p DIR_NAME/DIR2_NAME/DIR3_NAME : to create multiple directory with one command.

===============================
MOVING AND RENAMING DIRECTORIES
===============================
 
mv FILE_NAME DESTINATION : moving file from one to another folder.  
option attached with mv.
-n : no overwriting
-f : force overwriting [Default]
-i : interactive overwriting, "Ask me"
-v : verbose


==========================
Ownership and permisssions
===========================

whoami : to know what user you are in.

groups : to see what user groups available on your mac.

chown(change owenership) : to change the owenership of the file or directory.

chown OWENER_NAME FILE_NAME or DIRECTORY_NAME

==================================
FILE PERMISSIONS : ALPHA NOTATION
==================================

RWX
Read, Write, Execute

UGO :  SHORTHAND IS a
User, Group, Other

chmod MODE FILE_NAME : change mode to someting else
i.e chmode ugo=rwx FILE_NAME
    chmode u=rwx,g=rw,o=r FILE_NAME [standard]
    chmode ug+w FILE_NAME : to alter the existing permission

You can use a for UGO 
====
NOTE : + [plus] : to add permission, - [miinus] : to remove permission.
====

INFO : if you want to apply the permission to a folder and all the files inside it than you have to apply -R[Recursive] option with your chmod command.
****
i.e chmod -R g+w FOLDER_NAME

================================
FILE PERMISSION : OCTAL NOTATION
================================

r = 4 
w = 2 
x = 1

i.e if you want to apply rwxrw-r-- to any file. you can add above value and make an octal notation for it. Here,for this permission the octal notation is 764

777 = rwxrwxrwx
764 = rwxrw-r--
755 = rwxr-xr-x
000 = ---------
700 = rwx------

chmod 777 FILE_NAME : You are giving full access of a file to every one.

=============
THE ROOT USER
=============

Superuser account that can do anything on the system. 
Acutal name of sudo is 'substitute user do'.

sudo

HOW TO CHANGE THE USER
sudo -u USER_NAME whoami 

info: sudoers file located in /etc/sudoers. only adimin has access to this file.
*****
      All sudo settings are stored in this file. So handle with care if you are touching this file.


================
COMMANDS BASICS
================
All the commands which we are executing are located in 
/bin folder
for example : when you type echo "Hello world" So echo is stored in /bin folder. Basically you are telling termial to execute that file with hello world arguments.

You can locate the command location with below command

whereis COMMAND_NAME
which COMMAND_NAME
whatis COMMAND_NAME : will give you what command does in one line instructions.

You can write multiple commands in oneline with separtion of semicolon.

=============
PATH VARIABLE
=============

echo $PATH : to display path on your screen.

PATH=YOUR_PATH : to alter existed commands

===========================
SYSTEM INFORMATION COMMANDS
===========================

date : to display system date
uptime : will tell you for how long your system is on.
users: will show you users.
who:  will show you all users. NOTE: every session of UNIX loggedin as a new user. i.e: if you open two terminal windows it will show you 2 uesers of terminal and one user as a finder.
uname: displays the operating system name.
uname -mnrsvp : give you the detail information about you system.
uname -ap : shorthand command to above command.
host : will give you the hostname
domainname: will give you the domain name 
These above two commands work well in network environments.

=========================
DISK INFORMATION COMMANDS
=========================
df[DISK FREESPACE] : will return the free disk space information.

df -h [humanize] : to show data in human readable forms.
df -H : base 10 calculator. For new HDD you can calculate with this base10 system and you will get that what your manufacturer has advertised.
====
NOTE : There are two ways one can calculate gigabyts. BASE 2 and BASE 10.
==== 
du PATH : show disk usage of all directories contained in that folder path
du -ah PATH : will show disk usage of all directories and files within that folder path.

du -hd 1 : [DiskUsage -humanizeDepth 1] : so will just go 1 level in depth of the directory.

====
NOTE :
====
 Difference between DU and LS comands are:
DU: will display the space required by an actual block of the memoty required by a file or a folder.
LS: will display the actual size taken by a file or a folder.

==============================================================
VIEWING PROCESSES : UNIX COMMANDS FOR MONITORING THE PROCESSES.
==============================================================

Kernal and Shell

When we type a command in our bash terminal. it will communicate with kernal and get a help to achive those tasks.
After that kernal book some space on Disk and start a process to achive that. And once we get the result from it the kernal will reclaim that memory space and so other processes can use those space.

So basically kernal manages a processes for us.

ps [process status] : it will give us report of running processes.

ps -a  : show all processes running. not that helpful

ps a : 

ps aux 	[a: All processes running regared who owns it]
	[u: Include a column of a user who owns that process]
       	[x: Show me the background processes too.]

==================
MONITORING PROCESS
==================
top : to see recent processes on top with fill info and hit q to exit from that list
top -n 10 -o cpu -s 3 -U vishangsoni [Top ten CPU processes refreshing every 3 seconds own by a user] : 

=============
STOP PROCESS
=============
ctrl + c to quit the process
kill PROCESS_ID : stop the process 
kill -9 PROCESS_ID : force quit the process


=================
TEXT FILE HELPERS
=================
wc : word count
sort : sort lines
sort -r : reverce sort
soft -f : to igonre capital and small priority
sort -u : sort with uniq capability
uniq : filter in/out repeated lines. It will only look for one after antoher repeated lines.
uniq -d : returns repeted lines
uniq -u : unduplicated lines

================
UTILITY PROGRAMS
================
cal : calender program
bc : calculator program
expr : expression evaluator
units : unit conversion


cal MONTH YEAR : show you the calender of that month
cal -y YEAR : show you the calender for full year
cal -y : show full calender of current year
ncal : to rearrange the calender : try out

bc
quit to get out from it

scale = 10 : to change the prcesion of a decimal point

expr 1 + 1 : if you give sace it will consider it as a one word.

units

=====================
USING COMMAND HISTORY
=====================
All the unix commands are stored in .bash_history file inside your user direcotory

you can read all previous commands which you typed in by reading .bash_history file

history : to print all commands.

shorthand for historty commands to run

type in history : print all commands with number
!COMMAND_NUMBER : will execute that command for you.
!-COMMAND_NUMBER : will deduct that number from the current command number and execute the command
history -d COMMAND_NUMBER : to delete the command from the history.
hiarory -c : to clearout all commands in .bash_history file
 

